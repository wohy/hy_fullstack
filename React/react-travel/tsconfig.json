{
  "compilerOptions": {
    "noImplicitAny": false,  // 不需要显式地声明 any 类型
    "target": "es5",  // 定义了编译后的目标 js 版本
    "lib": [  // 编译期间所有需要的库文件
      "dom",  // 执行 document.getElementById('root') 时，编译器就知道如何检查执行
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,  // 允许混合编译 js 文件
    "skipLibCheck": true,
    "esModuleInterop": true,  // 允许我们使用 commonJs 的方式 import 引入我们默认的文件，可用 import React from 'React' 
    // "esModuleInterop" 若为 false 时，需要 import * as React from 'React'
    "allowSyntheticDefaultImports": true,  
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "module": "esnext",  // 配置的是我们代码的模块系统，有 Node.js 的 CommonJs， ES6 标准的 esnext，requireJs 的 AMD 系统
    "moduleResolution": "node",  // 决定我们编译器的工作方式
    "resolveJsonModule": true,  
    "isolatedModules": true,  // 会将每个文件作为单独的模块来使用
    "noEmit": true,  // 表示当发生错误的时候，编译器不要生成 js 代码
    "jsx": "react-jsx"  // 允许编译器支持编译 react 代码
  },
  "include": [
    "src"
  ]
}
